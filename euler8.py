## Q8
## 인접한 13개의 수를 곱한 수 중 가장 큰 수
num = '''
73167176531330624919225119674426574742355349194934
96983520312774506326239578318016984801869478851843
85861560789112949495459501737958331952853208805511
12540698747158523863050715693290963295227443043557
66896648950445244523161731856403098711121722383113
62229893423380308135336276614282806444486645238749
30358907296290491560440772390713810515859307960866
70172427121883998797908792274921901699720888093776
65727333001053367881220235421809751254540594752243
52584907711670556013604839586446706324415722155397
53697817977846174064955149290862569321978468622482
83972241375657056057490261407972968652414535100474
82166370484403199890008895243450658541227588666881
16427171479924442928230863465674813919123162824586
17866458359124566529476545682848912883142607690042
24219022671055626321111109370544217506941658960408
07198403850962455444362981230987879927244284909188
84580156166097919133875499200524063689912560717606
05886116467109405077541002256983155200055935729725
71636269561882670428252483600823257530420752963450
'''
## 복붙해서 확인해보니 중간에 \n 이 끼여서 나옴 ㅎ

def adjacents(number, n):
    product_list = []                       ## 곱하기한 값을 넣을 list를 만듦

    number = str(number)                    ## 숫자로 들어올 수 있으므로 str()함수 만들어줌

    number = number.replace("\n", "")       ## \n을 제거해줌

    for i in range(n, len(number)):         ## 곱하기할 갯수부터 시작해서 끝까지. 즉 범위는 길이에서 n 뺀 갯수

        num_list = number[i - n: i]         ## 즉 처음으로 들어갈 곱은 n, n-1, ..., 1까지

        products = 1                        ## 곱하기를 쌓기 위한 변수

        for j in num_list:                  ## 갯수만큼 자른 리스트
            products *= int(j)              ## 곱해준다 차례대로

        if products not in product_list:    ## 중복을 제거하기 위한 if문
            product_list.append(products)   ## 중복되지 않으면 product_list에 append 해줌

    return product_list


max(adjacents(a, 13))